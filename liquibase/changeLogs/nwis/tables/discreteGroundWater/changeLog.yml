databaseChangeLog:
  - preConditions:
    - dbms:
        type: postgresql
    -runningAs:
        username: ${NWIS_SCHEMA_OWNER_USERNAME}

  - changeSet:
      author: drsteini
      id: "create.table.${NWIS_SCHEMA_NAME}.discrete_ground_water"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              schemaName: ${NWIS_SCHEMA_NAME}
              tableName: discrete_ground_water
      changes:
        - sqlFile:
            path: discreteGroundWater.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${NWIS_SCHEMA_NAME}.discrete_ground_water cascade;

  - changeSet:
      author: eorosz
      id: "alter.table.${NWIS_SCHEMA_NAME}.discrete_ground_water.set.logged"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - sqlCheck:
          - sql: "SELECT count(*) from pg_catalog.pg_class AS c
                      join pg_catalog.pg_namespace AS ns
                      on c.relnamespace = ns.oid
                  WHERE nspname = '${NWIS_SCHEMA_NAME}' and relname = 'discrete_ground_water'
                     and relkind = 'r' and relpersistence = 'u'"
          - expectedResult: "1"
      changes:
        - sql: alter table if exists ${NWIS_SCHEMA_NAME}.discrete_ground_water set logged

  - changeSet:
      author: ayan
      id: "alter.table.${NWIS_SCHEMA_NAME}.discrete_ground_water.add.created_at"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - columnExists:
                schemaName: ${NWIS_SCHEMA_NAME}
                tableName: discrete_ground_water
                columnName: created_at
      changes:
        - sql: alter table ${NWIS_SCHEMA_NAME}.discrete_ground_water add column if not exists created_at timestamptz not null default now();
        - rollback: alter table ${NWIS_SCHEMA_NAME}.discrete_ground_water drop column created_at;

  - changeSet:
      author: ayan
      id: "alter.table.${NWIS_SCHEMA_NAME}.discrete_ground_water.add.updated_at"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
            - columnExists:
                schemaName: ${NWIS_SCHEMA_NAME}
                tableName: discrete_ground_water
                columnName: updated_at
      changes:
        - sql: alter table ${NWIS_SCHEMA_NAME}.discrete_ground_water add column if not exists updated_at timestamptz not null default now();
        - rollback: alter table ${NWIS_SCHEMA_NAME}.discrete_ground_water drop column updated_at;
